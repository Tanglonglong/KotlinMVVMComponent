plugins {
    alias(libs.plugins.android.application)
    alias(libs.plugins.kotlin.android)
    alias(libs.plugins.kotlin.compose)
}


android {
    namespace 'com.example.wanandroidapp'
    compileSdk rootProject.ext.android.compileSdkVersion
    defaultConfig {
        applicationId "com.example.wanandroidapp"
        minSdk rootProject.ext.android.minSdkVersion
        targetSdk rootProject.ext.android.targetSdkVersion
        versionCode rootProject.ext.android.versionCode
        versionName rootProject.ext.android.versionName
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_11
        targetCompatibility JavaVersion.VERSION_11
    }
    kotlinOptions {
        jvmTarget = '11'
    }
    buildFeatures {
        compose true
    }
    buildFeatures {
        dataBinding true  // 必须与子模块保持一致
    }
    buildFeatures {
        viewBinding true
    }

}

dependencies {
    implementation libs.androidx.core.ktx
    implementation libs.androidx.lifecycle.runtime.ktx
    implementation libs.androidx.activity.compose
    implementation platform(libs.androidx.compose.bom)
    implementation libs.androidx.ui
    implementation libs.androidx.ui.graphics
    implementation libs.androidx.ui.tooling.preview
    implementation libs.androidx.material3
    testImplementation libs.junit
    androidTestImplementation libs.androidx.junit
    androidTestImplementation libs.androidx.espresso.core
    androidTestImplementation platform(libs.androidx.compose.bom)
    androidTestImplementation libs.androidx.ui.test.junit4
    debugImplementation libs.androidx.ui.tooling
    debugImplementation libs.androidx.ui.test.manifest
    implementation libs.androidx.navigation.fragment
    implementation libs.androidx.navigation.ui.ktx
    implementation project(':library-base')
    implementation project(':library-data')
    if(isModuleLibrary.toBoolean()){
        //整体项目运行
        implementation project(':module-login')
        implementation project(':module-main')
        implementation project(':module-home')
        implementation project(':module-categories')
        implementation project(':module-scheme')
        implementation project(':module-mine')

    }
}